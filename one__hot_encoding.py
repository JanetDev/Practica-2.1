# -*- coding: utf-8 -*-
"""one _hot_encoding.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tVVojWPTFj5JM6Mg9jFgtmACD-_wEQQt

**Codificación one hot encoding para valores nominales**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import PowerTransformer

from google.colab import drive
drive.mount('/content/drive')

#importar datos

test = pd.read_csv('/content/drive/MyDrive/ArchivosColab/test.csv')
train = pd.read_csv('/content/drive/MyDrive/ArchivosColab/train.csv')

train.head()

train.info()

# Como se distribuyen los valores numericos
train.describe()

#codificación one-hot encoding para las variables categóricas "Sex" y "Embarked"
train = pd.get_dummies(train, columns = ['Sex','Embarked'])
train.head()

train['Age'].fillna(value=train['Age'].mean() , inplace=True)
X = train[['Fare','Age','Embarked_C','Embarked_Q','Embarked_S']]
Y = train[['Survived']]

X_train, X_test, Y_train, Y_test = train_test_split(X , Y , test_size=0.2 , random_state = 42)

# Entrenando modelos de regresion logistica
from sklearn.linear_model import LogisticRegression

logreg=LogisticRegression()
logreg.fit(X_train,Y_train)

from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

# Realizar predicciones en el conjunto de prueba
y_pred = logreg.predict(X_test)

# Evaluar el rendimiento del modelo
accuracy = accuracy_score(Y_test, y_pred)
print("Exactitud del modelo:", accuracy)
